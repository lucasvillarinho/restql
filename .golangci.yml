version: "2"
run:
  concurrency: 4
  # also lint _test.go files
  tests: true
  timeout: 5m
linters:
  enable:
    - govet
    - staticcheck
    - unused
    - errcheck
    - gocritic
    - gocyclo
    - revive
    - ineffassign
    - unconvert
    - goconst
    - prealloc
    - misspell
    - bodyclose
    - sqlclosecheck
    - nilerr
    - nestif
    - forcetypeassert
    - exhaustive
    - funlen
    - testifylint
    - whitespace
    - perfsprint
    - nolintlint
    - godot
    - thelper
    - tparallel
    - paralleltest
    - predeclared

  # disable noisy/controversial ones which you might enable later
  disable:
    - lll # line length â€” handled by gfmt/gofumpt

  settings:
    dupl:
      threshold: 20 # lower => stricter (tokens)
    errcheck:
      check-type-assertions: true
    funlen:
      lines: 120
      statements: 80
    goconst:
      min-len: 2
      min-occurrences: 3
    gocyclo:
      min-complexity: 15 # strict; lower => stricter
    wsl_v5:
      allow-first-in-block: true
      allow-whole-block: false
      branch-max-lines: 2
    testifylint:
      disable:
        - require-error
        - float-compare

  exclusions:
    generated: lax
    paths:
      - examples$
    rules:
      - linters:
          - revive
        text: "^unused-parameter:"
      - linters:
          - revive
        text: "^package-comments:"
      - linters:
          - errcheck
        text: "Error return value of `.*\\.Body\\.Close` is not checked"
      # linters disabled in tests
      - linters:
          - dupl
          - goconst
          - funlen
        path: "_test\\.go$"

issues:
  max-issues-per-linter: 0 # 0 = unlimited (we want ALL issues)
  max-same-issues: 100

formatters:
  enable:
    - gofmt
    - gofumpt
    - gci
  settings:
    gofmt:
      simplify: false
      rewrite-rules:
        - pattern: "interface{}"
          replacement: "any"
        - pattern: "a[b:len(a)]"
          replacement: "a[b:]"
    gofumpt:
      extra-rules: true
    gci:
      # Section configuration to compare against.
      # Section names are case-insensitive and may contain parameters in ().
      # The default order of sections is `standard > default > custom > blank > dot > alias > localmodule`.
      # If `custom-order` is `true`, it follows the order of `sections` option.
      # Default: ["standard", "default"]
      sections:
        - standard # Standard section: captures all standard packages.
        - default # Default section: contains all imports that could not be matched to another section type.
        - prefix(github.com/org/project) # Custom section: groups all imports with the specified Prefix.
        - blank # Blank section: contains all blank imports. This section is not present unless explicitly enabled.
        - dot # Dot section: contains all dot imports. This section is not present unless explicitly enabled.
        - alias # Alias section: contains all alias imports. This section is not present unless explicitly enabled.
        - localmodule # Local module section: contains all local packages. This section is not present unless explicitly enabled.
      # Checks that no inline comments are present.
      # Default: false
      no-inline-comments: true
      # Checks that no prefix comments (comment lines above an import) are present.
      # Default: false
      no-prefix-comments: true
      # Enable custom order of sections.
      # If `true`, make the section order the same as the order of `sections`.
      # Default: false
      custom-order: true
      # Drops lexical ordering for custom sections.
      # Default: false
      no-lex-order: true
  exclusions:
    generated: lax
    paths:
      - third_party$
      - builtin$
      - examples$
